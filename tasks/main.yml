---
# file: roles/rabbitmq/tasks/main.yml
- include: repository.yml
  tags: [ rabbitmq, rabbitmq-repo ]

- include: install.yml
  tags: [ rabbitmq, rabbitmq-package ]

- include: erlang.yml
  tags: [ rabbitmq, rabbitmq-cookie ]

- include: configuration.yml
  tags: [ rabbitmq, rabbitmq-config ]

- include: limits.yml
  tags: [ rabbitmq, rabbitmq-limits ]

- include: firewall.yml
  tags: [ rabbitmq, rabbitmq-firewalld ]
  when: rabbitmq_firewalld is defined and
        rabbitmq_firewalld

- include: selinux.yml
  tags: [ rabbitmq, rabbitmq-selinux ]
  when: rabbitmq_selinux is defined and
        rabbitmq_selinux

- name: Starting RabbitMQ service
  service:
    name=rabbitmq-server
    state=restarted
  when: rabbitmq_config.changed or rabbitmq_env.changed
  
# clustered variable is exported and will be used as a condition
#- name: Checking if a RabbitMQ cluster already exists
#  stat:
#    path=/etc/rabbitmq/clustered
#  register: clustered
#  tags: [ rabbitmq, rabbitmq-cluster ]
#
#- include: clustering.yml
#  tags: [ rabbitmq, rabbitmq-cluster ]
#  when: rabbitmq_reset_cluster is defined and
#        rabbitmq_reset_cluster and
#        rabbitmq_clustering is defined and
#        rabbitmq_clustering or (clustered.stat.exists != True)

- include: plugins.yml
  tags: [ rabbitmq, rabbitmq-plugins ]

- include: vhosts.yml
  tags: [ rabbitmq, rabbitmq-vhosts ]

- include: policies.yml
  tags: [ rabbitmq, rabbitmq-policies ]

- include: users.yml
  tags: [ rabbitmq, rabbitmq-users ]

- include: pacemaker.yml
  when: rabbitmq_pacemaker_support is defined and
        rabbitmq_pacemaker_support == true
  tags: [ rabbitmq, rabbitmq-pacemaker ]